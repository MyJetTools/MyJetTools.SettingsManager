@using Microsoft.AspNetCore.Components
@using SettingsManager.Abstractions
@using SettingsManager.Forms.Secrets

@inject ISecretRepository _secretRepository
@inject ISnackbar Snackbar

<MudCard>
    <MudForm Model="@_addModel" @ref="@form" Validation="@(Validator.ValidateValue)" ValidationDelay="0">
        <MudCardContent>
            <MudTextField @bind-Value="_addModel.Name"
                          For="@(() => _addModel.Name)"
                          Immediate="true"
                          Label="Secret name"/>

            <MudTextField @bind-Value="_addModel.Value"
                          For="@(() => _addModel.Value)"
                          Immediate="true"
                          Label="Secret value"/>
        </MudCardContent>
    </MudForm>
    <MudCardActions>
        <MudButton Disabled="@_addFormProcessing" OnClick="@(async () => await AddSecret())" Variant="Variant.Filled" Color="Color.Primary">
            @if (_addFormProcessing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2">Adding</MudText>
            }
            else
            {
                <MudText>Add config</MudText>
            }
        </MudButton>
    </MudCardActions>
</MudCard>

@code {
    private MudForm form;

    private AddSecretFormModel _addModel = new();
    
    private bool _addFormProcessing = false;
    public readonly AddSecretValidator Validator = new();

    [Parameter]
    public Func<Task> OnAdd { get; set; }

    [Parameter]
    public HashSet<string> SecretsNames { get; set; } = new ();

    private async Task AddSecret()
    {
        if (form.IsValid)
        {
            _addFormProcessing = true;

            if (SecretsNames.Contains(_addModel.Name))
            {
                Snackbar.Add("Secret exists", Severity.Error);
                _addFormProcessing = false;
                return;
            }
            
            await _secretRepository.AddSecret(_addModel);
            _addFormProcessing = false;
            await OnAdd();
        }
    }

}