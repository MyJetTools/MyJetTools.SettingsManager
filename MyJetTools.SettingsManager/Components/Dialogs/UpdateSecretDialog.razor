@using Microsoft.AspNetCore.Components
@using MudBlazor
@using SettingsManager.Abstractions
@using SettingsManager.Forms.Secrets

@inject ISecretRepository _secretRepository

<MudDialog>
    <DialogContent>
        <MudCard>
            <MudForm Model="@UpdateModel" @ref="@form" Validation="@(Validator.ValidateValue)" ValidationDelay="0">
                <MudCardContent>
                    <MudTextField
                        Disabled="true"
                        @bind-Value="UpdateModel.Name"
                                  For="@(() => UpdateModel.Name)"
                                  Immediate="true"
                                  Label="Secret name"/>

                    <MudTextField @bind-Value="UpdateModel.Value"
                                  For="@(() => UpdateModel.Value)"
                                  Immediate="true"
                                  Label="Secret value"/>
                </MudCardContent>
            </MudForm>
        </MudCard>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudCardActions>
            <MudButton Disabled="@_processing" OnClick="@(async () => await AddSecret())" Variant="Variant.Filled" Color="Color.Primary">
                @if (_processing)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                    <MudText Class="ms-2">Adding</MudText>
                }
                else
                {
                    <MudText>Update config</MudText>
                }
            </MudButton>
        </MudCardActions>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    public MudForm form;
    
    [Parameter]
    public AddSecretFormModel UpdateModel { get; set; }

    public readonly AddSecretValidator Validator = new();

    private bool _processing;

    
    private async Task AddSecret()
    {
        if (form.IsValid)
        {
            _processing = true;
            await _secretRepository.UpdateSecret(UpdateModel);
            _processing = false;
            MudDialog.Close();
        }
    }

    void Cancel() => MudDialog.Cancel();
}